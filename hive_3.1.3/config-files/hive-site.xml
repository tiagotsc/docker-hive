<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?><!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<configuration>

   <property>
      <name>javax.jdo.option.ConnectionURL</name>
      <value>jdbc:mysql://localhost/metastore?createDatabaseIfNotExist=true</value>
      <description>metadata is stored in a MySQL server</description>
   </property>

   <property>
      <name>javax.jdo.option.ConnectionDriverName</name>
      <value>com.mysql.cj.jdbc.Driver</value>
      <description>MySQL JDBC driver class</description>
   </property>

   <property>
      <name>javax.jdo.option.ConnectionUserName</name>
      <value>hiveuser</value>
      <description>user name for connecting to mysql server</description>
   </property>

   <property>
      <name>javax.jdo.option.ConnectionPassword</name>
      <value>Hiveuser@123</value>
      <description>password for connecting to mysql server</description>
   </property>

   <property>
      <name>hive.execution.engine</name>
      <value>tez</value>
   </property>

   <property>
      <name>hive_timeline_logging_enabled</name>
      <value>true</value>
   </property>

   <!--Configuração para funcionamento do Beeline-->
   <property>
      <name>hive.exec.pre.hooks</name>
      <value>org.apache.hadoop.hive.ql.hooks.HiveProtoLoggingHook,org.apache.hadoop.hive.ql.hooks.ATSHook</value>
   </property>
   <property>
      <name>hive.exec.post.hooks</name>
      <value>org.apache.hadoop.hive.ql.hooks.HiveProtoLoggingHook,org.apache.hadoop.hive.ql.hooks.ATSHook</value>
   </property>
   <property>
      <name>hive.exec.failure.hooks</name>
      <value>org.apache.hadoop.hive.ql.hooks.HiveProtoLoggingHook,org.apache.hadoop.hive.ql.hooks.ATSHook</value>
   </property>

   <!-- Configuração autenticação LDAP -->
   <property>
      <name>hive.server2.authentication</name>
      <value>LDAP</value>
   </property>

   <property>
      <name>hive.server2.authentication.ldap.url</name>
      <!--<value>ldaps://openldap:389</value>-->
      <value>ldap://openldap:389</value>
      <description>LDAP_URL - URL of LDAP server (e.g. ldap://localhost:389)</description>
   </property>

   <property>
      <name>hive.server2.authentication.ldap.baseDN</name>
      <value>dc=tiagotsc,dc=com,dc=br</value>
      <description>LDAP_BASE_DN - base distinguish name of users (e.g. dc=hackolade,dc=com)</description>
   </property>

   <property>
      <name>hive.server2.authentication.ldap.userDNPattern</name>
      <value>cn=%s,dc=tiagotsc,dc=com,dc=br</value>
      <description>LDAP_DN_PATTERN - pattern for matching users (e.g. CN=%s,DC=hackolade,DC=com). By default users are matched by uid.</description>
   </property>

   <!-- Habilitando controle de perfils dos usuários e administrador do Hive-->
   <property>
      <name>hive.server2.enable.doAs</name>
      <value>false</value> 
      <description>
         Permite que as consultas do Hive sejam executadas pelo usuário que envia a consulta, e não pelo hiveusuário. Deve ser definido como false para autorização baseada em padrão SQL.
      </description>
   </property>

   <property>
      <name>hive.users.in.admin.role</name>
      <value>admin</value>
      <description>
      Lista separada por vírgulas de usuários atribuídos à função de administrador.
      Por padrão o usuário admin, já vem com acesso administrador.
      Os demais usuário caso necessário, precisam ser adicionados nesse atributo.
      Ao entrar o beeline ou JDBC, na sessão habilite o perfil administrador executando:
      SET ROLE admin;
      </description>
   </property>

   <property>
      <name>hive.security.authorization.enabled</name>
      <value>true</value>
   </property>

   <property>
      <name>hive.security.metastore.authorization.manager</name>
      <value>org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly</value>
   </property>

   <property>
      <name>hive.security.authorization.manager</name>
      <value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory</value>
      <!--<value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory</value>-->
   </property>

   <property>
      <name>hive.security.authenticator.manager</name>
      <value>org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator</value>
   </property>

</configuration>
